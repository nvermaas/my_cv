[{"R:\\source\\javascript\\my_cv\\src\\index.js":"1","R:\\source\\javascript\\my_cv\\src\\App.js":"2","R:\\source\\javascript\\my_cv\\src\\reportWebVitals.js":"3","R:\\source\\javascript\\my_cv\\src\\contexts\\GlobalStateReducer.js":"4","R:\\source\\javascript\\my_cv\\src\\contexts\\GlobalContext.js":"5","R:\\source\\javascript\\my_cv\\src\\components\\Main.js":"6","R:\\source\\javascript\\my_cv\\src\\components\\NavigationBar.js":"7","R:\\source\\javascript\\my_cv\\src\\routes\\welcome\\WelcomePage.js":"8","R:\\source\\javascript\\my_cv\\src\\routes\\history\\HistoryPage.js":"9","R:\\source\\javascript\\my_cv\\src\\routes\\skills\\SkillsPage.js":"10","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\PortfolioPage.js":"11","R:\\source\\javascript\\my_cv\\src\\routes\\whoami\\WhoAmIPage.js":"12","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\Projects.js":"13","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectThumbnail.js":"14","R:\\source\\javascript\\my_cv\\src\\routes\\whoami\\WhoAmICard.js":"15","R:\\source\\javascript\\my_cv\\src\\routes\\skills\\SkillsCard.js":"16","R:\\source\\javascript\\my_cv\\src\\routes\\skills\\AncientSkillsCard.js":"17","R:\\source\\javascript\\my_cv\\src\\routes\\welcome\\WelcomeCard.js":"18","R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronSDCCard.js":"19","R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronROCard.js":"20","R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronApertifCard.js":"21","R:\\source\\javascript\\my_cv\\src\\routes\\history\\GeopsCard.js":"22","R:\\source\\javascript\\my_cv\\src\\routes\\history\\SAVECard.js":"23","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectCard.js":"24","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectDetailsCard.js":"25","R:\\source\\javascript\\my_cv\\src\\contexts\\StaticConfig.js":"26","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\NavigationBar.js":"27","R:\\source\\javascript\\my_cv\\src\\routes\\skills\\PreviousSkillsCard.js":"28","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ArchitecturePage.js":"29"},{"size":498,"mtime":1666021721312,"results":"30","hashOfConfig":"31"},{"size":398,"mtime":1666021721295,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1666021721312,"results":"33","hashOfConfig":"31"},{"size":760,"mtime":1668948247237,"results":"34","hashOfConfig":"31"},{"size":959,"mtime":1668942716102,"results":"35","hashOfConfig":"31"},{"size":2535,"mtime":1672402248915,"results":"36","hashOfConfig":"31"},{"size":931,"mtime":1669217172692,"results":"37","hashOfConfig":"31"},{"size":163,"mtime":1666199157821,"results":"38","hashOfConfig":"31"},{"size":486,"mtime":1666434945339,"results":"39","hashOfConfig":"31"},{"size":371,"mtime":1668969008340,"results":"40","hashOfConfig":"31"},{"size":2362,"mtime":1669836716014,"results":"41","hashOfConfig":"31"},{"size":194,"mtime":1666196864381,"results":"42","hashOfConfig":"31"},{"size":1083,"mtime":1669231102590,"results":"43","hashOfConfig":"31"},{"size":1562,"mtime":1666106036774,"results":"44","hashOfConfig":"31"},{"size":785,"mtime":1668967650523,"results":"45","hashOfConfig":"31"},{"size":1956,"mtime":1669215749601,"results":"46","hashOfConfig":"31"},{"size":1392,"mtime":1668967946059,"results":"47","hashOfConfig":"31"},{"size":901,"mtime":1669216501725,"results":"48","hashOfConfig":"31"},{"size":2382,"mtime":1669216620498,"results":"49","hashOfConfig":"31"},{"size":4107,"mtime":1669206561148,"results":"50","hashOfConfig":"31"},{"size":2211,"mtime":1668968679803,"results":"51","hashOfConfig":"31"},{"size":1378,"mtime":1666550001176,"results":"52","hashOfConfig":"31"},{"size":2596,"mtime":1666964243807,"results":"53","hashOfConfig":"31"},{"size":1804,"mtime":1669209011622,"results":"54","hashOfConfig":"31"},{"size":2644,"mtime":1668972158657,"results":"55","hashOfConfig":"31"},{"size":47913,"mtime":1672402537612,"results":"56","hashOfConfig":"31"},{"size":1292,"mtime":1669215895647,"results":"57","hashOfConfig":"31"},{"size":1682,"mtime":1668969049557,"results":"58","hashOfConfig":"31"},{"size":2959,"mtime":1669217130189,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"umqipu",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"62"},"R:\\source\\javascript\\my_cv\\src\\index.js",[],["134","135"],"R:\\source\\javascript\\my_cv\\src\\App.js",[],"R:\\source\\javascript\\my_cv\\src\\reportWebVitals.js",[],"R:\\source\\javascript\\my_cv\\src\\contexts\\GlobalStateReducer.js",["136"],"// the reducer for the global state providor.\r\n\r\n// possible actions\r\nimport ProjectDetailsCard from \"../routes/portfolio/ProjectDetailsCard\";\r\n\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const SET_PORTFOLIO_PAGE = 'SET_PORTFOLIO_PAGE'\r\n\r\nexport const initialState = {\r\n        status: \"unfetched\",\r\n        portfolio_page: \"all\",\r\n}\r\n\r\nexport const reducer = (state, action) => {\r\n    switch (action.type) {\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n\r\n        case SET_PORTFOLIO_PAGE:\r\n            return {\r\n                ...state,\r\n                portfolio_page: action.portfolio_page,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","R:\\source\\javascript\\my_cv\\src\\contexts\\GlobalContext.js",["137"],"import React, {createContext, useContext, useReducer, useState} from 'react';\r\n\r\nexport const GlobalContext = createContext();\r\n\r\nexport const GlobalContextProvider = ({reducer, initialState, children}) => {\r\n\r\n    return <GlobalContext.Provider\r\n        value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </GlobalContext.Provider>\r\n}\r\n\r\nexport const useGlobalReducer = () => useContext(GlobalContext)\r\n\r\n// create a comma separated list of id's from a json list of observations (used as id__in=<ids>)\r\nexport function getIds(observations) {\r\n    let ids = ''\r\n\r\n    ids = observations.map( (observation) => {\r\n        return observation.id}\r\n\r\n    )\r\n    return ids\r\n}\r\n\r\nexport const findProject = (projects, route_to_find) => {\r\n    let found_project = projects.filter(project => {\r\n        if (project.route === route_to_find) {\r\n            return true\r\n        }\r\n        return false\r\n\r\n    }).slice(0);\r\n    return found_project[0]\r\n}","R:\\source\\javascript\\my_cv\\src\\components\\Main.js",["138","139","140","141","142","143","144"],"R:\\source\\javascript\\my_cv\\src\\components\\NavigationBar.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\welcome\\WelcomePage.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\history\\HistoryPage.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\skills\\SkillsPage.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\PortfolioPage.js",["145","146"],"import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nimport { projects } from '../../contexts/StaticConfig';\r\nimport { useGlobalReducer, findProject } from '../../contexts/GlobalContext';\r\n\r\nimport Projects from './Projects'\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nexport default function PortfolioPage(props) {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    // check for a selected project in the stored state.\r\n    let selected_project\r\n\r\n    // check for a selected project in the requested url, or from the stored state.\r\n    if (props.project_route) {\r\n        if (!selected_project) {\r\n            // check if there is a project indicated in the url.\r\n            selected_project = findProject(projects, props.project_route)\r\n        }\r\n    }\r\n\r\n    let renderProjects\r\n    if (selected_project===undefined) {\r\n        renderProjects = <div>\r\n            <Card className='text-left'>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        All software in this portolio was made by me. In most cases I was the only developer,\r\n                        with the exception of the MoM Java software, where I initially followed an externally hired developer.\r\n                        The ESAP & ADEX software has evolved into a team efford, but for clarity I show it how I initially created it.\r\n                        I wrote more software than these pages show, I have limited it to the web applications.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <Projects type={props.page} base_route={\"/portfolio/\" + my_state.portfolio_page}/>\r\n        </div>\r\n    } else {\r\n        // find the specific details_card to render in the project structure\r\n        let found = projects.filter(function(item) { return item.name === selected_project.name; });\r\n        let DetailsCard = found[0]['details_card']\r\n        renderProjects = <DetailsCard project={selected_project} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <NavigationBar/>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                        {renderProjects}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","R:\\source\\javascript\\my_cv\\src\\routes\\whoami\\WhoAmIPage.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\Projects.js",["147","148"],"import React from 'react';\r\nimport {Col, Container, Row} from \"react-bootstrap\";\r\nimport { projects, base_url } from '../../contexts/StaticConfig';\r\n\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nexport default function Projects(props) {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n                <Row>\r\n                    {\r\n                        projects.map((project) => {\r\n                            let list = project.type.split(',')\r\n\r\n                            if (list.includes(props.type) || ((props.type === 'all') && (list[0] !== 'architecture')) )  {\r\n\r\n                                let image_url = base_url + project.thumbnail\r\n                                return (\r\n                                    <Col lg={true}>\r\n                                        <ProjectCard project={project} image={image_url} base_route={props.base_route}/>\r\n                                    </Col>\r\n                                );\r\n                            }\r\n                        })\r\n                    }\r\n                </Row>\r\n         </div>\r\n    );\r\n}","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectThumbnail.js",["149","150"],"import React from 'react';\r\nimport {Card, Button } from 'react-bootstrap'\r\n\r\nimport { useGlobalReducer } from '../../contexts/GlobalContext';\r\nimport { SET_CURRENT_PROJECT } from '../../contexts/GlobalStateReducer'\r\n\r\nexport default function ProjectThumbnail(props) {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    const handleDetailsClick = (project_name) => {\r\n        my_dispatch({type: SET_CURRENT_PROJECT, current_project: project_name})\r\n    }\r\n\r\n    function searchNameIndex(nameKey, myArray){\r\n        for (var i=0; i < myArray.length; i++) {\r\n            if (myArray[i].name === nameKey) {\r\n                return i;\r\n            }\r\n        }\r\n    }\r\n\r\n    const image_src =\r\n        process.env.NODE_ENV === \"development\"\r\n            ? \"http://localhost:3000\"+props.project.thumbnail\r\n            : \"https://uilennest.net/cv\"+props.project.thumbnail\r\n\r\n//: process.env.PUBLIC_URL+props.project.thumbnail\r\n\r\n\r\n    return (\r\n\r\n        <Card className=\"card-img-cutout-dir\" >\r\n            <Card.Img variant top src={image_src} width=\"270\" height=\"270\" />\r\n            <Card.ImgOverlay>\r\n                <h4>{props.project.name}</h4>\r\n                &nbsp;\r\n                &nbsp;\r\n                &nbsp;\r\n                <tr></tr>\r\n                <tr>\r\n                <td>\r\n                    <Button variant=\"outline-warning\" size=\"sm\" onClick={() => handleDetailsClick(props.project.name)}>Details</Button>&nbsp;\r\n                </td>\r\n\r\n                </tr>\r\n            </Card.ImgOverlay>\r\n\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\n",["151","152"],"R:\\source\\javascript\\my_cv\\src\\routes\\whoami\\WhoAmICard.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\skills\\SkillsCard.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\skills\\AncientSkillsCard.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\welcome\\WelcomeCard.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronSDCCard.js",["153","154","155"],"import React from 'react';\r\nimport {Card, Table, Container, Row, Col} from 'react-bootstrap'\r\nimport sdc from '../../assets/sdc.jpg';\r\n\r\n\r\nexport default function AstronSDCCard() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 align={\"left\"}>ASTRON Science Data Center, Dwingeloo (2019 - present)</h3>\r\n\r\n                    <Card.Text>\r\n\r\n                        <Table>\r\n\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <img src={sdc} width=\"300\" alt=\"logo cv\"/>\r\n                                </td>\r\n                                <td align=\"left\">\r\n                                    In 2019 I joined the 'SDC team' at ASTRON to start development of the ESAP Science Portal for the European Escape project.\r\n                                    I set up the development infrastructure (Gitlab), made the technology choices (Django and ReactJS)\r\n                                    and implemented the first iteration of the ESAP portal and the ADEX spinoff for ASTRON.\r\n                                    <tr>&nbsp;</tr>\r\n                                    In the following years the team grew and became the dedicated development team for the new Science Data Center.\r\n                                    My role changed to a more architectural/design role and lead developer for ADEX.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li>ESAP <a href={\"/cv/portfolio/all/esap-api\"}>backend</a> & <a href={\"/cv/portfolio/all/esap-gui\"}>frontend</a></li>\r\n                                    <li>ADEX <a href={\"/cv/portfolio/all/adex-backend-django\"}>backend</a> & <a href={\"/cv/portfolio/all/adex-gui\"}>frontend</a> (lead engineer)</li>\r\n                                    <li><a href={\"/cv/architecture/all\"}>Architecture</a>, analyses and design</li>\r\n                                    <li>Infrastructure & DevOps (CI/CD pipelines in Gitlab and Github)</li>\r\n                                    <li>Introducing documentation vision & strategy</li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronROCard.js",["156","157","158"],"import React from 'react';\r\nimport {Card, Table, Container, Row, Col} from 'react-bootstrap'\r\nimport lofar from '../../assets/lofar.jpg';\r\n\r\n\r\nexport default function AstronSDCCard() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 align=\"left\">ASTRON Radio Observatory, Westerbork (2002 - 2020)</h3>\r\n\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <img src={lofar} width=\"300\" alt=\"logo cv\"/>\r\n                                </td>\r\n                                <td align=\"left\">\r\n                                    In 2002 I joined ASTRON. Initially I worked on the European Cosmo.lab project for\r\n                                    the university of Bologna as the ASTRON radio-astronomy representative. This was in C++.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    In 2003 we started to work on <a href={\"/cv/portfolio/java/mom-wsrt\"}>MoM for the WSRT</a> telescope, the first web based observation management system.\r\n                                    The technology was Java Struts running in a Tomcat server and was introduced by an external party.\r\n                                    We worked in a team of 4 people on a suite of interconnected software with this technology.\r\n\r\n                                    I also wrote the 'Scotty' software (in java) to interface the ancient fortran software running on unix\r\n                                    with this newly introduced web application.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li><a href={\"/cv/portfolio/java/mom-wsrt\"}>MoM for the WSRT</a> Telescope (backend/frontend/databases)</li>\r\n                                    <li>Tomcat Web environment</li>\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    In 2007 MoM was ported to the LOFAR telescope as <a href={\"/cv/portfolio/java/mom-lofar\"}>Mom3</a>.\r\n                                    I became the only developer to support and upgrade MoM after that.\r\n                                    LOFAR was in development for a long time, and my task was to keep MoM adapted accordingly.\r\n\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    I also wrote the <a href={\"/cv/portfolio/java/craft\"}>CRAFT</a> software, which was developed to keep track of all the LOFAR hardware components. a micro-service architecture.\r\n                                    This was a micro-services architecture in Java, with a Java-struts/MySql backend on Tomcat\r\n                                    and several distributed java GUI's as services.\r\n                                    The GUI's, combined with a barcode scanner, where used at the factories and the telescope construction sites.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    I wrote several SQL solutions for data analysis and reporting for the science support group. Mostly on top of the MoM MySQL database.\r\n                                    <tr>&nbsp;</tr>\r\n\r\n                                    <li><a href={\"/cv/portfolio/java/mom-lofar\"}>MoM for LOFAR Telescope</a> (backend/frontend/databases)</li>\r\n                                    <li>Tomcat Web environment</li>\r\n\r\n                                    <li><a href={\"/cv/portfolio/java/craft\"}>CRAFT</a> (backend/frontend developer)</li>\r\n                                    <li>Software Support role for the broader suite of LOFAR software.</li>\r\n                                    <li>DevOps role for deploying/maintaining the <a href={\"/cv/portfolio/java/mom-ecosystem\"}>MoM ecosystem</a></li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\history\\AstronApertifCard.js",["159","160","161"],"import React from 'react';\r\nimport {Card, Table, Container, Row, Col} from 'react-bootstrap'\r\nimport westerbork from '../../assets/westerbork.jpg';\r\n\r\n\r\nexport default function AstronSDCCard() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 align=\"left\">ASTRON Apertif, Dwingeloo (2016 - 2020)</h3>\r\n\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <img src={westerbork} width=\"300\" alt=\"logo cv\"/>\r\n                                </td>\r\n                                <td align=\"left\">\r\n                                    In 2016 I joined the 'ALTA team' to develop the Apertif Long Term Archive.\r\n                                    This was a 5 person agile/scrum team, where I built the <a href={\"/cv/portfolio/all/alta-gui\"}>ALTA frontend</a> in ReactJS\r\n                                    and the <a href={\"/cv/portfolio/all/alta-api\"}>ALTA backend/api</a> in Django.\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li><a href={\"/cv/portfolio/all/alta-gui\"}>ALTA</a> (backend/frontend developer)</li>\r\n                                    <li>DevOps (CI/CD pipelines in Jenkins)</li>\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    In 2017 I joined the 'APERTIF team' to develop ATDB,\r\n                                    a web application and set of distributed microservices to\r\n                                    connect the astronomers, operators, telescopes and archive into a working system.\r\n                                    I was the only developer and worked directly with the scientists.\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li><a href={\"/cv/portfolio/all/atdb\"}>ATDB</a> (architect, lead developer)</li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\history\\GeopsCard.js",["162","163","164"],"import React from 'react';\r\nimport {Card, Table, Container, Row, Col} from 'react-bootstrap'\r\nimport geops from '../../assets/geops.jpg';\r\n\r\n\r\nexport default function GeopsCard() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 align=\"left\">Geops BV, Wageningen (1990 - 1994)</h3>\r\n\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <img src={geops} width=\"300\" alt=\"logo cv\"/>\r\n                                </td>\r\n                                <td align=\"left\">\r\n                                    In 1990 I joined Geops BV, a small GIS firm.\r\n                                    I developed 'geodig', the digitizer/input package of the GeoPackage Software in Borland Pascal.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li>Pascal Programmer</li>\r\n                                    <li>Fortran Programmer</li>\r\n                                    <li>Writing digitizer drivers</li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\history\\SAVECard.js",["165","166","167"],"import React from 'react';\r\nimport {Card, Table, Container, Row, Col} from 'react-bootstrap'\r\nimport save_image from '../../assets/save_image.jpg';\r\n\r\n\r\nexport default function SAVECard() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 align=\"left\">SAVE, Apeldoorn (1994 - 2002)</h3>\r\n\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <img src={save_image} width=\"300\" alt=\"logo cv\"/>\r\n                                </td>\r\n                                <td align=\"left\">\r\n                                    In 1994 I joined SAVE, a small engineering firm in the field of external safety.\r\n                                    I created several software packages in Delphi (Pascal based) and Clipper (dbase3 based).\r\n                                    Part of the packages that I wrote interfaced with the GIS software that was bought from my previous workplace.\r\n                                    The synergy between those two streams of software generated a lot of work for SAVE.\r\n                                    <tr>&nbsp;</tr>\r\n                                    Other packages I wrote were about workplace safety (AVRIM, NIVRIM) and industrial safety contours (msev).\r\n                                    I also became a trainer to teach the labour inspectors at the ministry of SZW how to use the software.\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li>Software Developer (Pascal, Delphi, Clipper)</li>\r\n                                    <li>Data Engineer (dbase3)</li>\r\n                                    <li>System Administrator</li>\r\n                                    <li>Trainer</li>\r\n\r\n                                    <tr>&nbsp;</tr>\r\n                                    In 2000 I became the lead of a team that used the software that I had build to 'digitize/map' the whole\r\n                                    country so we could use that data to calculate fire department respond times.\r\n                                    (there was no google maps yet).\r\n                                    <tr>&nbsp;</tr>\r\n                                    <li>Team Lead (GIS)</li>\r\n                                </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectCard.js",["168","169","170","171"],"import React from 'react';\r\nimport {Card, Table, Button, Container, Row, Col} from 'react-bootstrap'\r\nimport { useHistory  } from 'react-router-dom';\r\n\r\nimport {useGlobalReducer} from \"../../contexts/GlobalContext\";\r\n\r\nexport default function ProjectCard(props) {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n    const history = useHistory();\r\n\r\n    const handleClick = (project,base_route) => {\r\n        //let new_route = '/portfolio/' + my_state.portfolio_page + '/' + project.route\r\n        let new_route = base_route + '/' + project.route\r\n        history.push(new_route)\r\n\r\n    }\r\n\r\n    return (\r\n            <Card className='text-left' >\r\n                <Card.Header as=\"h2\">\r\n                    <Row>\r\n                        <Col sm={10} md={10} lg={10}>\r\n                            <h2 align={\"left\"}>{props.project.name}</h2>\r\n                        </Col>\r\n                        <Col sm={2} md={2} lg={2}>\r\n                            <Button variant=\"secondary\" onClick={() => handleClick(props.project,props.base_route)}>Details</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{props.project.short_description}</Card.Subtitle>\r\n\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <tr>\r\n                                <td align=\"left\">\r\n                                    <a href={props.image} target=\"_blank\"><img src={props.image} height=\"300\" alt=\"project\"/></a>\r\n                                    </td>\r\n                            </tr>\r\n                        </Table>\r\n                    </Card.Text>\r\n\r\n                 </Card.Body>\r\n            </Card>\r\n    );\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ProjectDetailsCard.js",["172","173","174"],"import React, {useEffect} from 'react';\r\nimport {Card, Table, Row, Col, Button} from 'react-bootstrap'\r\nimport { base_url, config } from '../../contexts/StaticConfig';\r\n\r\nexport default function ProjectDetailsCard(props) {\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [])\r\n\r\n    let renderBullets\r\n    if (props.project.bullets) {\r\n        renderBullets = props.project.bullets.map(bullet => {\r\n            return <li align={\"left\"}>{bullet.title}: {bullet.text}</li>\r\n        })\r\n    }\r\n\r\n    // render the links as a bullet list\r\n    let renderLinks\r\n    if (props.project.links!==undefined) {\r\n        renderLinks = props.project.links.map(link => {\r\n            return <li align={\"left\"}>{link.title}: <a href={link.url}>{link.text}</a></li>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Card className='text-left'>\r\n                <Card.Header as=\"h2\">{props.project.name}</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{props.project.description}</Card.Subtitle>\r\n                    <hr></hr>\r\n                    <Row>\r\n                        <Col>\r\n                    {renderBullets}\r\n                        </Col>\r\n                        <Col>\r\n                    {renderLinks}\r\n                        </Col>\r\n                    </Row>\r\n                    <Card.Text>\r\n                    {\r\n                        // iterate over each details entry, and render as an image with accompanying text\r\n                        props.project.details.map((detail) => {\r\n                            let image_url = base_url + detail.image\r\n                            return (\r\n                                <div>\r\n                                    &nbsp;\r\n                                    <hr></hr>\r\n                                    <Row lg={true}>\r\n                                        <Col>\r\n                                            <a href={image_url} target=\"_blank\"><img src={image_url} width={config.image_width} alt={detail.description}/></a>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Subtitle className=\"mb-2 text-muted\">{detail.description}</Card.Subtitle>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n","R:\\source\\javascript\\my_cv\\src\\contexts\\StaticConfig.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\NavigationBar.js",["175"],"import React from 'react';\r\n\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nimport { NavLink } from \"react-router-dom\"\r\nimport {useGlobalReducer} from \"../../contexts/GlobalContext\";\r\nimport { SET_PORTFOLIO_PAGE} from \"../../contexts/GlobalStateReducer\";\r\n\r\n\r\nexport default function NavigationBar() {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n    const handleClick = (page) => {\r\n        my_dispatch({type: SET_PORTFOLIO_PAGE, portfolio_page: page})\r\n    }\r\n    return (\r\n        <Navbar bg=\"secondary\" variant=\"dark\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link as={NavLink} to=\"/portfolio/all\" onClick={() => handleClick(\"all\")}>All Projects</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/portfolio/frontend_reactjs\" onClick={() => handleClick(\"frontend_reactjs\")}>ReactJS (frontend)</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/portfolio/backend_django\" onClick={() => handleClick(\"backend_django\")}>Django (backend)</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/portfolio/java\" onClick={() => handleClick(\"java\")}>Java</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/portfolio/private\" onClick={() => handleClick(\"private\")}>Private Projects</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n\r\n    );\r\n}","R:\\source\\javascript\\my_cv\\src\\routes\\skills\\PreviousSkillsCard.js",[],"R:\\source\\javascript\\my_cv\\src\\routes\\portfolio\\ArchitecturePage.js",["176","177","178","179","180"],"import React from 'react';\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\r\n\r\nimport { projects } from '../../contexts/StaticConfig';\r\nimport { useGlobalReducer, findProject } from '../../contexts/GlobalContext';\r\nimport {\r\n    SET_PORTFOLIO_PAGE\r\n} from '../../contexts/GlobalStateReducer';\r\n\r\nimport Projects from './Projects'\r\nimport NavigationBar from \"./NavigationBar\";\r\n\r\nexport default function PortfolioPage(props) {\r\n    const [ my_state , my_dispatch] = useGlobalReducer()\r\n\r\n\r\n    // check for a selected project in the stored state.\r\n    let selected_project\r\n\r\n    // check for a selected project in the requested url, or from the stored state.\r\n    if (props.project_route) {\r\n        if (!selected_project) {\r\n            // check if there is a project indicated in the url.\r\n            selected_project = findProject(projects, props.project_route)\r\n        }\r\n    }\r\n\r\n    let renderProjects\r\n    if (selected_project===undefined) {\r\n        renderProjects = <div>\r\n            <Card className='text-left'>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        My formal education in 'system engineering' influences my software engineering a lot.\r\n                        I have a training in several methodologies, but mostly cherry pick some specific techniques from SA/SD.\r\n                        'System engineering' has a broad scope, but in my role as software engineer I usually limit myself to modelling\r\n                        architecture, technical design, datamodels, implementation and deployment.\r\n                        To limit the number of models, I try to combine these different views on the system if possible.\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        My style is pragmatic and very visual, in principe every aspect of a system can be modelled, especially before implementation.\r\n                        The goal is to provide a living map of the system. Which acts as a guide and documentation during and after development.\r\n                        This page shows several examples of how that works out in real life.\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n            <Projects type={props.page} base_route={\"/architecture\"}/>\r\n        </div>\r\n    } else {\r\n        // find the specific details_card to render in the project structure\r\n        let found = projects.filter(function(item) { return item.name === selected_project.name; });\r\n        let DetailsCard = found[0]['details_card']\r\n        renderProjects = <DetailsCard project={selected_project} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col sm={12} md={12} lg={12}>\r\n                        {renderProjects}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":4,"column":8,"nodeType":"187","messageId":"188","endLine":4,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":1,"column":55,"nodeType":"187","messageId":"188","endLine":1,"endColumn":63},{"ruleId":"185","severity":1,"message":"190","line":11,"column":9,"nodeType":"187","messageId":"188","endLine":11,"endColumn":28},{"ruleId":"185","severity":1,"message":"191","line":11,"column":30,"nodeType":"187","messageId":"188","endLine":11,"endColumn":48},{"ruleId":"185","severity":1,"message":"192","line":69,"column":13,"nodeType":"187","messageId":"188","endLine":69,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":69,"column":24,"nodeType":"187","messageId":"188","endLine":69,"endColumn":35},{"ruleId":"185","severity":1,"message":"192","line":75,"column":13,"nodeType":"187","messageId":"188","endLine":75,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":75,"column":24,"nodeType":"187","messageId":"188","endLine":75,"endColumn":35},{"ruleId":"185","severity":1,"message":"194","line":76,"column":11,"nodeType":"187","messageId":"188","endLine":76,"endColumn":15},{"ruleId":"185","severity":1,"message":"195","line":2,"column":37,"nodeType":"187","messageId":"188","endLine":2,"endColumn":43},{"ruleId":"185","severity":1,"message":"193","line":11,"column":24,"nodeType":"187","messageId":"188","endLine":11,"endColumn":35},{"ruleId":"185","severity":1,"message":"196","line":2,"column":14,"nodeType":"187","messageId":"188","endLine":2,"endColumn":23},{"ruleId":"197","severity":1,"message":"198","line":13,"column":48,"nodeType":"199","messageId":"200","endLine":13,"endColumn":50},{"ruleId":"185","severity":1,"message":"192","line":8,"column":13,"nodeType":"187","messageId":"188","endLine":8,"endColumn":21},{"ruleId":"185","severity":1,"message":"201","line":14,"column":14,"nodeType":"187","messageId":"188","endLine":14,"endColumn":29},{"ruleId":"181","replacedBy":"202"},{"ruleId":"183","replacedBy":"203"},{"ruleId":"185","severity":1,"message":"196","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"204","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":2,"column":38,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"196","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"204","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":2,"column":38,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"196","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"204","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":2,"column":38,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"196","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"204","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":2,"column":38,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"196","line":2,"column":22,"nodeType":"187","messageId":"188","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"204","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"205","line":2,"column":38,"nodeType":"187","messageId":"188","endLine":2,"endColumn":41},{"ruleId":"185","severity":1,"message":"196","line":2,"column":30,"nodeType":"187","messageId":"188","endLine":2,"endColumn":39},{"ruleId":"185","severity":1,"message":"192","line":8,"column":13,"nodeType":"187","messageId":"188","endLine":8,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":8,"column":24,"nodeType":"187","messageId":"188","endLine":8,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":39,"column":37,"nodeType":"208","endLine":39,"endColumn":75},{"ruleId":"185","severity":1,"message":"209","line":2,"column":15,"nodeType":"187","messageId":"188","endLine":2,"endColumn":20},{"ruleId":"185","severity":1,"message":"195","line":2,"column":32,"nodeType":"187","messageId":"188","endLine":2,"endColumn":38},{"ruleId":"206","severity":1,"message":"207","line":51,"column":45,"nodeType":"208","endLine":51,"endColumn":81},{"ruleId":"185","severity":1,"message":"192","line":11,"column":13,"nodeType":"187","messageId":"188","endLine":11,"endColumn":21},{"ruleId":"185","severity":1,"message":"195","line":2,"column":37,"nodeType":"187","messageId":"188","endLine":2,"endColumn":43},{"ruleId":"185","severity":1,"message":"191","line":7,"column":5,"nodeType":"187","messageId":"188","endLine":7,"endColumn":23},{"ruleId":"185","severity":1,"message":"210","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":21},{"ruleId":"185","severity":1,"message":"192","line":14,"column":13,"nodeType":"187","messageId":"188","endLine":14,"endColumn":21},{"ruleId":"185","severity":1,"message":"193","line":14,"column":24,"nodeType":"187","messageId":"188","endLine":14,"endColumn":35},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"no-unused-vars","'ProjectDetailsCard' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'SET_CURRENT_PROJECT' is defined but never used.","'SET_PORTFOLIO_PAGE' is defined but never used.","'my_state' is assigned a value but never used.","'my_dispatch' is assigned a value but never used.","'page' is assigned a value but never used.","'Button' is defined but never used.","'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'searchNameIndex' is defined but never used.",["211"],["212"],"'Row' is defined but never used.","'Col' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'Table' is defined but never used.","'NavigationBar' is defined but never used.","no-global-assign","no-unsafe-negation"]